<?php
/**
 * InstrumentIdentifierApiTest
 * PHP version 5
 *
 * @category Class
 * @package  CyberSource
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * CyberSource Flex API
 *
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace CyberSource;

use \CyberSource\Configuration;
use \CyberSource\ApiClient;
use \CyberSource\ApiException;
use \CyberSource\ObjectSerializer;

/**
 * InstrumentIdentifierApiTest Class Doc Comment
 *
 * @category Class
 * @package  CyberSource
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InstrumentIdentifierApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for instrumentidentifiersPost
     *
     * Create an Instrument Identifier.
     *
     */
    public function testInstrumentidentifiersPost()
    {
    }

    /**
     * Test case for instrumentidentifiersTokenIdDelete
     *
     * Delete an Instrument Identifier.
     *
     */
    public function testInstrumentidentifiersTokenIdDelete()
    {
    }

    /**
     * Test case for instrumentidentifiersTokenIdGet
     *
     * Retrieve an Instrument Identifier.
     *
     */
    public function testInstrumentidentifiersTokenIdGet()
    {
    }

    /**
     * Test case for instrumentidentifiersTokenIdPatch
     *
     * Update a Instrument Identifier.
     *
     */
    public function testInstrumentidentifiersTokenIdPatch()
    {
    }

    /**
     * Test case for instrumentidentifiersTokenIdPaymentinstrumentsGet
     *
     * Retrieve all Payment Instruments associated with an Instrument Identifier.
     *
     */
    public function testInstrumentidentifiersTokenIdPaymentinstrumentsGet()
    {
    }
}
